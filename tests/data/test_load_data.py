import os
from contextlib import AbstractContextManager
from contextlib import nullcontext as does_not_raise
from typing import Optional

import pytest
from datasets import DatasetDict


from src.data.load_data import load_data
from src import TaskType, DatasetType

THIS_DIR: str = os.path.dirname(os.path.abspath(__file__))


@pytest.mark.parametrize(
    "task_name, dataset_name, test_samples, filter_num_sent, filter_num_causal, num_train, num_valid, num_test, expectation",
    [
        (
            "sequence_classification",
            "altlex",
            None,
            None,
            None,
            462,
            115,
            401,
            does_not_raise(),
        ),
        (
            "sequence_classification",
            "altlex",
            None,
            "intra",
            None,
            -1,
            -1,
            -1,
            pytest.raises(ValueError),
        ),
        ("span_detection", "altlex", 300, None, None, 240, 60, 115, does_not_raise()),
        (
            "span_detection",
            "altlex",
            None,
            None,
            "single",
            229,
            57,
            103,
            does_not_raise(),
        ),
        ("span_detection", "altlex", None, None, "multi", 12, 2, 12, does_not_raise()),
        (
            "sequence_classification",
            "because",
            None,
            None,
            None,
            852,
            51,
            51,
            does_not_raise(),
        ),
        (
            "sequence_classification",
            "because",
            None,
            "inter",
            None,
            -1,
            -1,
            -1,
            pytest.raises(ValueError),
        ),
        ("span_detection", "because", None, None, None, 679, 41, 41, does_not_raise()),
        (
            "span_detection",
            "because",
            None,
            None,
            "single",
            521,
            36,
            36,
            does_not_raise(),
        ),
        ("span_detection", "because", None, None, "multi", 158, 5, 5, does_not_raise()),
        (
            "sequence_classification",
            "ctb",
            None,
            None,
            None,
            1569,
            316,
            316,
            does_not_raise(),
        ),
        (
            "sequence_classification",
            "ctb",
            None,
            "intra",
            None,
            1117,
            212,
            212,
            does_not_raise(),
        ),
        (
            "sequence_classification",
            "ctb",
            None,
            "inter",
            None,
            452,
            104,
            104,
            does_not_raise(),
        ),
        (
            "span_detection",
            "ctb",
            None,
            None,
            "single",
            -1,
            -1,
            -1,
            pytest.raises(ValueError),
        ),
        (
            "sequence_classification",
            "esl",
            None,
            None,
            None,
            1768,
            232,
            232,
            does_not_raise(),
        ),
        (
            "sequence_classification",
            "esl",
            None,
            "intra",
            None,
            776,
            97,
            97,
            does_not_raise(),
        ),
        (
            "sequence_classification",
            "esl",
            None,
            "inter",
            None,
            992,
            135,
            135,
            does_not_raise(),
        ),
        (
            "sequence_classification",
            "pdtb",
            None,
            None,
            None,
            26684,
            8083,
            8083,
            does_not_raise(),
        ),
        (
            "sequence_classification",
            "pdtb",
            1000,
            None,
            None,
            26684,
            8083,
            1000,
            does_not_raise(),
        ),
        (
            "sequence_classification",
            "pdtb",
            None,
            "intra",
            None,
            10865,
            3397,
            3397,
            does_not_raise(),
        ),
        (
            "sequence_classification",
            "pdtb",
            None,
            "inter",
            None,
            15819,
            4686,
            4686,
            does_not_raise(),
        ),
        (
            "span_detection",
            "pdtb",
            None,
            None,
            None,
            6912,
            2076,
            2076,
            does_not_raise(),
        ),
        (
            "span_detection",
            "pdtb",
            None,
            None,
            "single",
            6331,
            1857,
            1857,
            does_not_raise(),
        ),
        (
            "span_detection",
            "pdtb",
            None,
            None,
            "multi",
            640,
            160,
            219,
            does_not_raise(),
        ),
        (
            "sequence_classification",
            "semeval",
            None,
            None,
            None,
            6380,
            1595,
            2715,
            does_not_raise(),
        ),
        (
            "sequence_classification",
            "semeval",
            None,
            "intra",
            None,
            -1,
            -1,
            -1,
            pytest.raises(ValueError),
        ),
        (
            "sequence_classification",
            "fincausal",
            None,
            None,
            None,
            17060,
            2132,
            2133,
            does_not_raise(),
        ),
        (
            "sequence_classification",
            "fincausal",
            None,
            "intra",
            None,
            9680,
            1210,
            1211,
            does_not_raise(),
        ),
        (
            "sequence_classification",
            "fincausal",
            None,
            "inter",
            None,
            7379,
            922,
            923,
            does_not_raise(),
        ),
        (
            "span_detection",
            "fincausal",
            None,
            None,
            None,
            1087,
            136,
            136,
            does_not_raise(),
        ),
        (
            "chain_classification",
            "reco",
            None,
            None,
            None,
            3111,
            417,
            672,
            does_not_raise(),
        ),
        (
            "chain_classification",
            "pdtb",
            None,
            None,
            None,
            -1,
            -1,
            -1,
            pytest.raises(ValueError),
        ),
    ],
)
def test_load_data(
    task_name: str,
    dataset_name: str,
    test_samples: Optional[int],
    filter_num_sent: Optional[str],
    filter_num_causal: Optional[str],
    num_train: int,
    num_valid: int,
    num_test: int,
    expectation: AbstractContextManager,
) -> None:
    with expectation:
        dsd: DatasetDict = load_data(
            task_enum=TaskType[task_name],
            dataset_enum=DatasetType[dataset_name],
            data_dir=os.path.join(THIS_DIR, "../../data"),
            test_samples=test_samples,
            filter_num_sent=filter_num_sent,
            filter_num_causal=filter_num_causal,
        )
        assert isinstance(dsd, DatasetDict)
        assert len(dsd["train"]) == num_train
        assert len(dsd["valid"]) == num_valid
        assert len(dsd["test"]) == num_test
